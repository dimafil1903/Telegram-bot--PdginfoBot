<?php
/**
 * This file is part of the TelegramBot package.
 *
 * (c) Avtandil Kikabidze aka LONGMAN <akalongman@gmail.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Longman\TelegramBot\Commands\SystemCommands;

use Longman\TelegramBot\ChatAction;
use Longman\TelegramBot\Commands\SystemCommand;
use Longman\TelegramBot\Conversation;
use Longman\TelegramBot\Entities\InlineKeyboard;
use Longman\TelegramBot\Entities\Keyboard;
use Longman\TelegramBot\Entities\ServerResponse;
use Longman\TelegramBot\Exception\TelegramException;
use Longman\TelegramBot\Request;

/**
 * Generic message command
 *
 * Gets executed when any type of message is sent.
 */
class GenericmessageCommand extends SystemCommand
{
    /**
     * @var string
     */
    protected $name = 'genericmessage';

    /**
     * @var string
     */
    protected $description = 'Handle generic message';

    /**
     * @var string
     */
    protected $version = '1.1.0';

    /**
     * @var bool
     */
    protected $need_mysql = true;

    /**
     * Command execute method if MySQL is required but not available
     *
     * @return ServerResponse
     * @throws TelegramException
     */
    public function executeNoDb()
    {
        // Do nothing
        return Request::emptyResponse();
    }

    /**
     * Command execute method
     *
     * @return ServerResponse
     * @throws TelegramException
     */
    public function execute()
    {
        //If a conversation is busy, execute the conversation command after handling the message
        $conversation = new Conversation(
            $this->getMessage()->getFrom()->getId(),
            $this->getMessage()->getChat()->getId()
        );

        //Fetch conversation command if it exists and execute it
        if ($conversation->exists() && ($command = $conversation->getCommand())) {
            return $this->telegram->executeCommand($command);
        }
        $message = $this->getMessage();
        $chat_id = $message->getChat()->getId();
        $text = $message->getText();
        $msg_id = $message->getMessageId();
        $first_name = $message->getFrom()->getFirstName();
        $last_name = $message->getFrom()->getLastName();

        if ($text == '‚¨ÜÔ∏è –ù–∞–∑–∞–¥') {
            $data = [
                'chat_id' => $chat_id,
                'text' => '–í–∏ –ø–æ–≤–µ—Ä–Ω—É–ª–∏—Å—è –Ω–∞–∑–∞–¥',
                'reply_markup' => Keyboard::remove(),
            ];
            $keyboard = new Keyboard(
                ['text' => '–î–æ–≤—ñ–¥–Ω–∏–∫', 'callback_data' => '–î–µ–ø—É—Ç–∞—Ç–∏ üë§'],
                ['–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç üöç', '*']
            );
            $keyboard->setResizeKeyboard(true)
                ->setSelective(false);
            $data1 = [
                'chat_id' => $chat_id,
                'text' => '–û–±–µ—Ä—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ üëá ',
                'reply_markup' => $keyboard,
            ];
            Request::sendMessage($data);
            Request::sendMessage($data1);

        } else if ($text == '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç üöç') {
            $keyboard2 = new Keyboard(
                ['üìÑ –°—Ö–µ–º–∞ –º–∞—Ä—à—Ä—É—Ç—É', 'üìú –ì—Ä–∞—Ñ—ñ–∫ –º–∞—Ä—à—Ä—É—Ç—É'],
                ['‚¨ÜÔ∏è –ù–∞–∑–∞–¥']

            );
            $keyboard2->setResizeKeyboard(true)
                ->setSelective(false);
            $data_menu = [
                'chat_id' => $chat_id,
                'text' => '–í–∏ –∑–∞–π—à–ª–∏ –≤ –º–µ–Ω—é –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç',
                'reply_markup' => $keyboard2,
            ];

            Request::sendMessage($data_menu);
        } else if ($text == '–î–µ–ø—É—Ç–∞—Ç–∏ üë§') {
            $keyboard = new Keyboard(
                ['üìÑ –°–ø–∏—Å–æ–∫ –¥–µ–ø—É—Ç–∞—Ç—ñ–≤', 'üîé –ü–æ—à—É–∫ –¥–µ–ø—É—Ç–∞—Ç–∞ –∑–∞ –≤—É–ª–∏—Ü–µ—é'],
                ['üìñ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –¥–µ–ø—É—Ç–∞—Ç–∞', '‚¨ÜÔ∏è –ù–∞–∑–∞–¥']

            );
            $keyboard->setResizeKeyboard(true)
                ->setSelective(false);
            $data = [
                'chat_id' => $chat_id,
                'text' => '–í–∏ –∑–∞–π—à–ª–∏ –≤ –º–µ–Ω—é –î–µ–ø—É—Ç–∞—Ç–∏',
                'reply_markup' => $keyboard,
            ];

            Request::sendMessage($data);
        } else if ($text == 'üìÑ –°–ø–∏—Å–æ–∫ –¥–µ–ø—É—Ç–∞—Ç—ñ–≤') {
            $link = mysqli_connect('localhost', 'adminbot', '7C3h0J3l', 'pdginfo')

            or die("–û—à–∏–±–∫–∞ " . mysqli_error($link));
            mysqli_set_charset($link, 'utf8mb4');
            // –≤—ã–ø–æ–ª–Ω—è–µ–º –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
            $query = "SELECT * FROM deputy order by name";
            $result = mysqli_query($link, $query) or die($text = '–æ—à–∏–±–∫–∞');
            if ($result) {
                $send = '';
                foreach ($result as $val) {

                    $send .= "<b>" . $val['name'] . "</b> - /deputy".$val['id']  . "\n";
                }
                $data = [
                    'chat_id' => $chat_id,
                    'parse_mode' => 'HTML',
                    'text' => $send
                ];
                $data1 = [
                    'chat_id' => $chat_id,
                    'text' => "–ë—É–¥—å –ª–∞—Å–∫–∞, –æ—Å—å —Å–ø–∏—Å–æ–∫ –≤—Å—ñ—Ö –¥–µ–ø—É—Ç–∞—Ç—ñ–≤ –º—ñ—Å—å–∫–æ—ó —Ä–∞–¥–∏: üòå"
                ];
                Request::sendMessage($data1);
                sleep(1);
                Request::sendMessage($data);


            }
// –∑–∞–∫—Ä—ã–≤–∞–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
            mysqli_close($link);


        }  if ($text == 'üìÑ –°—Ö–µ–º–∞ –º–∞—Ä—à—Ä—É—Ç—É') {
            $conn = mysqli_connect('localhost', 'adminbot', '7C3h0J3l', 'pdginfo');
// Check connection
            mysqli_set_charset($conn, 'utf8mb4');
            if (!$conn) {
                die("Connection failed: " . mysqli_connect_error());
            }

            $sql = "Insert into messages (chat_id,message_id,fromWho,message)VALUES ('$chat_id','$msg_id','$first_name  $last_name ' ,'$text')";

            mysqli_query($conn, $sql);

            $selec = "select  * from messages order by id desc ";
            $res = mysqli_query($conn, $selec);
            foreach ($res as $val) {
                if ($val['message_id'] == $msg_id) {
                    $data = [
                        'chat_id' => $chat_id,
                        'text' => '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –º–∞—Ä—à—Ä—É—Ç—É',
                    ];
                    Request::sendMessage($data);
                }
            }
            mysqli_close($conn);


        } if ($text == 'üìú –ì—Ä–∞—Ñ—ñ–∫ –º–∞—Ä—à—Ä—É—Ç—É') {
            $conn = mysqli_connect('localhost', 'adminbot', '7C3h0J3l', 'pdginfo');
// Check connection
            mysqli_set_charset($conn, 'utf8mb4');
            if (!$conn) {
                die("Connection failed: " . mysqli_connect_error());
            }

            $sql = "Insert into messages (chat_id,message_id,fromWho,message)VALUES ('$chat_id','$msg_id','$first_name  $last_name ' ,'$text')";

            mysqli_query($conn, $sql);

            $selec = "select  * from messages order by id desc ";
            $res = mysqli_query($conn, $selec);
            foreach ($res as $val) {
                if ($val['message_id'] == $msg_id) {
                    $data = [
                        'chat_id' => $chat_id,
                        'text' => '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –º–∞—Ä—à—Ä—É—Ç—É',
                    ];
                    Request::sendMessage($data);
                }
            }
            mysqli_close($conn);


        }



        if ($text == 'üîé –ü–æ—à—É–∫ –¥–µ–ø—É—Ç–∞—Ç–∞ –∑–∞ –≤—É–ª–∏—Ü–µ—é') {
            $conn = mysqli_connect('localhost', 'adminbot', '7C3h0J3l', 'pdginfo');
// Check connection
            mysqli_set_charset($conn, 'utf8mb4');
            if (!$conn) {
                die("Connection failed: " . mysqli_connect_error());
            }

            $sql = "Insert into messages (chat_id,message_id,fromWho,message)VALUES ('$chat_id','$msg_id','$first_name  $last_name ' ,'$text')";

            mysqli_query($conn, $sql);

            $selec = "select  * from messages order by id desc ";
            $res = mysqli_query($conn, $selec);
            foreach ($res as $val) {
                if ($val['message_id'] == $msg_id) {
                    $data = [
                        'chat_id' => $chat_id,
                        'text' => '–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É —Å–≤–æ—î—ó –≤—É–ª–∏—Ü—ñ –∞–±–æ –ø—Ä–æ–≤—É–ª–∫–∞',
                    ];
                    Request::sendMessage($data);
                }
            }
            mysqli_close($conn);


        }  if ($text == 'üìñ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –¥–µ–ø—É—Ç–∞—Ç–∞') {
            $conn = mysqli_connect('localhost', 'adminbot', '7C3h0J3l', 'pdginfo');
// Check connection
            mysqli_set_charset($conn, 'utf8mb4');
            if (!$conn) {
                die("Connection failed: " . mysqli_connect_error());
            }

            $sql = "Insert into messages (chat_id,message_id,fromWho,message)VALUES ('$chat_id','$msg_id','$first_name  $last_name ' ,'$text')";

            mysqli_query($conn, $sql);

            $selec = "select  * from messages order by id desc ";
            $res = mysqli_query($conn, $selec);
            foreach ($res as $val) {
                if ($val['message_id'] == $msg_id) {
                    $data = [
                        'chat_id' => $chat_id,
                        'text' => '–í–≤–µ–¥—ñ—Ç—å –ø—Ä—ñ–∑–≤–∏—â–µ –¥–µ–ø—É—Ç–∞—Ç–∞',
                    ];
                    Request::sendMessage($data);
                }
            }
            mysqli_close($conn);

        }


        $conn = mysqli_connect('localhost', 'adminbot', '7C3h0J3l', 'pdginfo');
// Check connection
        mysqli_set_charset($conn, 'utf8mb4');
        if (!$conn) {
            die("Connection failed: " . mysqli_connect_error());
        }
        $dep_info_in_list="SELECT * FROM dep_street LEFT Join street on dep_street.street_id = street.id LEFT JOIN deputy on dep_street.dep_id=deputy.id";
        $res_dep_info=mysqli_query($conn, $dep_info_in_list);


        $dep_info_in_deputy="SELECT * FROM deputy";
        $res_deps_info=mysqli_query($conn, $dep_info_in_deputy);
        $streets="";
        foreach ($res_deps_info as $depu){
            foreach ($res_dep_info as $dep){
                if($depu['id']==$dep['dep_id'] and $text=='/deputy'.$dep['dep_id']){
                    $streets.=$dep['name_s']."\n";
                }
            }
            if($text=="/deputy".$depu['id']){
                $data = [
                    'chat_id' => $chat_id,
                    'text' => $depu['name']." üë§\nüìÖ –î–∞—Ç–∞ –ø—Ä–∏–π–æ–º—É: ".$depu['date_of_meet']."\nüè† –ú—ñ—Å—Ü–µ –ø—Ä–∏–π–æ–º—É: ".$depu['place_of_meet']."\n–ü–µ—Ä–µ–ª—ñ–∫ –≤—É–ª–∏—Ü—å –≤ –æ–∫—Ä—É–∑—ñ: \n".$streets,
                ];
                Request::sendMessage($data);
            }
        }



        $selec = "select  * from messages order by id desc ";
        $resy = mysqli_query($conn, $selec);

        $res = '';
        foreach ($resy as $val) {
            $select_dep = "SELECT * FROM dep_street LEFT Join street on dep_street.street_id = street.id LEFT JOIN deputy on dep_street.dep_id=deputy.id where street.name_s LIKE '%" . $text . "%' ";
            $select_dep_info = "SELECT * FROM dep_street LEFT Join street on dep_street.street_id = street.id LEFT JOIN deputy on dep_street.dep_id=deputy.id  where deputy.name LIKE '" . $text . "%'";
            $select_dep_info2 = "select * from deputy where name LIKE '" . $text . "%'";
            $result = mysqli_query($conn, $select_dep);
            $result2 = mysqli_query($conn, $select_dep_info);
            $result3 = mysqli_query($conn, $select_dep_info2);
            if ($val['chat_id']==$chat_id  and $val['message_id'] == $msg_id - 2 and $text!=='' and $val['message'] == 'üîé –ü–æ—à—É–∫ –¥–µ–ø—É—Ç–∞—Ç–∞ –∑–∞ –≤—É–ª–∏—Ü–µ—é') {

                if ($result->num_rows == 0) {
                    $data = [
                        'chat_id' => $chat_id,
                        'text' => "‚ùå –ü–æ–º–∏–ª–∫–∞: \n—Ü—ñ—î—ó –≤—É–ª–∏—Ü—ñ –∞–±–æ –ø—Ä–æ–≤—É–ª–∫–∞ –Ω–µ–º–∞—î –≤ –±–∞–∑—ñ –¥–∞–Ω–Ω–∏—Ö\n‚úÖ –ü—Ä–∏–∫–ª–∞–¥:\n–ü–æ—à—Ç–æ–≤–∞, 1-–π –°–∞–≥–∞–π–¥–∞—á–Ω–∏–π \n‚ùóÔ∏è–ü—Ä–∏–º—ñ—Ç–∫–∞:\n–¥–µ—è–∫—ñ –≤—É–ª–∏—Ü—ñ –ø–µ—Ä–µ–π–º–µ–Ω–æ–≤–∞–Ω—ñ –Ω–∞ —Å—É—á–∞—Å–Ω—ñ –Ω–∞–∑–≤–∏, –≤—Ä–∞—Ö–æ–≤—É–π—Ç–µ —Ü–µ –ø—Ä–∏ –ø–æ—à—É–∫—É",
                    ];
                    Request::sendMessage($data);
                } else {
                    foreach ($result as $v) {
                        $res .= "üîñ " . $v['name_s'] . ' -  üë§ ' . $v['name'] . "\n";

                    }
                    $data = [
                        'chat_id' => $chat_id,
                        'text' => $res,
                    ];
                    $dataaction = [
                        'chat_id' => $chat_id,
                        'action' => ChatAction::TYPING,
                    ];
                    Request::sendChatAction($dataaction);
                    sleep(2);
                    Request::sendMessage($data);
                    $data1 = [
                        'chat_id' => $chat_id,
                        'text' => "–ü–æ—à—É–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ—à—É–∫—É –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å —â–µ —Ä–∞–∑ –∫–Ω–æ–ø–∫—É '–ü–æ—à—É–∫ –¥–µ–ø—É—Ç–∞—Ç–∞ –∑–∞ –≤—É–ª–∏—Ü–µ—é' ",
                    ];
                    sleep(2);
                    Request::sendMessage($data1);
                }
            }
            if ($val['chat_id']==$chat_id and $val['message_id'] == $msg_id - 2 and $text !=='' and $val['message'] == 'üìñ –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –¥–µ–ø—É—Ç–∞—Ç–∞') {
                $s = '';
                if ($result3->num_rows == 0) {
                    $data = [
                        'chat_id' => $chat_id,
                        'text' => "‚ùå –ü–æ–º–∏–ª–∫–∞: \n–¶—å–æ–≥–æ –ø—Ä—ñ–∑–≤–∏—â–∞ –Ω–µ–º–∞—î –≤ –±–∞–∑—ñ –¥–∞–Ω–Ω–∏—Ö\n‚úÖ –ü—Ä–∏–∫–ª–∞–¥:\n–ó–µ–ª–µ–Ω–∏–π, –ì–∞–Ω–∂–∞ –°.–ê. \n‚ùóÔ∏è–ü—Ä–∏–º—ñ—Ç–∫–∞:\n–ü—Ä—ñ–∑–≤–∏—â–µ —Ç—Ä–µ–±–∞ –ø–∏—Å–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ –∑ –≤–µ–ª–∏–∫–æ—ó –ª—ñ—Ç–µ—Ä–∏.–ú–æ–∂–Ω–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ —ñ–Ω—ñ—Ü—ñ–∞–ª–∏(—Ç–∞–∫–æ–∂ –∑ –≤–µ–ª–∏–∫–æ—ó –ª—ñ—Ç–µ—Ä–∏)\n–í—Ä–∞—Ö–æ–≤—É–π—Ç–µ —Ü–µ –ø—Ä–∏ –ø–æ—à—É–∫—É",
                    ];
                    Request::sendMessage($data);
                } else {
                    foreach ($result3 as $i) {
                        $s .= "‚úÖ <b>" . $i['name'] . "</b> \nüì© email: –í—ñ–¥—Å—É—Ç–Ω—ñ–π\nüìû —Ç–µ–ª–µ—Ñ–æ–Ω: –í—ñ–¥—Å—É—Ç–Ω—ñ–π\n"."üìÖ –î–∞—Ç–∞ –ø—Ä–∏–π–æ–º—É: ".$i['date_of_meet']."\nüè† –ú—ñ—Å—Ü–µ –ø—Ä–∏–π–æ–º—É: ".$i['place_of_meet'];
                    }


                    $data2 = [
                        'chat_id' => $chat_id,
                        'parse_mode' => 'HTML',
                        'text' => $s,
                    ];
                    $dataaction = [
                        'chat_id' => $chat_id,
                        'action' => ChatAction::TYPING,
                    ];
                    Request::sendChatAction($dataaction);
                    sleep(2);
                    Request::sendMessage($data2);

                    foreach ($result2 as $v) {
                        $res .= $v['name_s'] . ' - ' . $v['name'] . "\n";

                    }
                    $data = [
                        'chat_id' => $chat_id,
                        'text' => $res,


                    ];
                    sleep(1);
                    Request::sendMessage($data);


                    $data1 = [
                        'chat_id' => $chat_id,
                        'text' => "–ü–æ—à—É–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ—à—É–∫—É –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å —â–µ —Ä–∞–∑ –∫–Ω–æ–ø–∫—É '–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ –¥–µ–ø—É—Ç–∞—Ç–∞' ",
                    ];
                    sleep(1);
                    Request::sendMessage($data1);
                }

            }
            if ($val['chat_id']==$chat_id and $val['message_id'] == $msg_id - 2 and $text!=='' and $val['message'] == 'üìÑ –°—Ö–µ–º–∞ –º–∞—Ä—à—Ä—É—Ç—É') {


                if ($text=='236' or $text=='235' or $text=='245' or $text=='260' or $text=='244' or $text=='243' or $text=='242' ) {
                    Request::sendPhoto([
                        'chat_id' => $chat_id,
                        'photo' => "/var/www/adminbot/data/www/bot.pidgorodne.info/public/bot/Upload/$text.jpg",
                    ]);

                    $data6 = [
                        'chat_id' => $chat_id,
                        'text' => "–ë—É–¥—å –ª–∞—Å–∫–∞,—Ü–µ —Å—Ö–µ–º–∞ $text –º–∞—Ä—à—Ä—É—Ç—É",
                    ];

                    Request::sendMessage($data6);
                } else {
                    $data1 = [
                        'chat_id' => $chat_id,
                        'text' => "–ú–æ–∂–Ω–∞ –≤–≤–æ–¥–∏—Ç–∏ –º–∞—Ä—à—Ä—É—Ç–∏ –ª–∏—à–µ —Ü–∏—Ñ—Ä–∞–º–∏\n–ù–∞–ø—Ä–∏–∫–ª–∞–¥: 236, 244",
                    ];

                    Request::sendMessage($data1);
                }

            }
            if ($val['chat_id']==$chat_id and $val['message_id'] == $msg_id - 2 and $text!=='' and $val['message'] == 'üìú –ì—Ä–∞—Ñ—ñ–∫ –º–∞—Ä—à—Ä—É—Ç—É') {


                if ($text=='236' or $text=='235' or $text=='245' or $text=='260' or $text=='244' or $text=='243' or $text=='242' ) {

                    Request::sendPhoto([
                        'chat_id' => $chat_id,
                        'photo' => Request::encodeFile("/var/www/adminbot/data/www/bot.pidgorodne.info/public/bot/Upload/workday_$text.jpg"),
                        'caption'=>'–ë—É–¥–Ω—ñ–π –¥–µ–Ω—å',
                    ]);
                    Request::sendPhoto([
                        'chat_id' => $chat_id,
                        'photo' => Request::encodeFile("/var/www/adminbot/data/www/bot.pidgorodne.info/public/bot/Upload/dayoff_$text.jpg"),
                        'caption'=>'–í–∏—Ö—ñ–¥–Ω–∏–π –¥–µ–Ω—å'
                    ]);



                    $data6 = [
                        'chat_id' => $chat_id,
                        'text' => "–ë—É–¥—å –ª–∞—Å–∫–∞, —Ü–µ –≥—Ä–∞—Ñ—ñ–∫ $text  –º–∞—Ä—à—Ä—É—Ç—É",
                    ];

                    Request::sendMessage($data6);
                } else {
                    $data1 = [
                        'chat_id' => $chat_id,
                        'text' => "–ú–æ–∂–Ω–∞ –≤–≤–æ–¥–∏—Ç–∏ –º–∞—Ä—à—Ä—É—Ç–∏ –ª–∏—à–µ —Ü–∏—Ñ—Ä–∞–º–∏\n–ù–∞–ø—Ä–∏–∫–ª–∞–¥: 236, 244",
                    ];

                    Request::sendMessage($data1);
                }

            }
        }


        $delet_id_msg = $msg_id - 2;
        $del = "DELETE FROM messages WHERE message_id='$delet_id_msg' AND chat_id='$chat_id'";
        mysqli_query($conn, $del);
        mysqli_close($conn);


    }
}
